{"version":3,"file":"static/js/cast-subview.52ac39dd.chunk.js","mappings":"kPAGe,SAASA,EAAT,GAAyB,IAATC,EAAQ,EAARA,KAC7B,OACE,gBAAKC,UAAU,OAAf,SACGD,EAAKE,QAAU,EACdF,EAAKG,KAAI,SAAAC,GAAK,OACZ,iBAAoBH,UAAU,QAA9B,WACE,gBAAKA,UAAU,kBAAf,UACE,gBAAKI,IAAKC,EAAAA,GAAWF,EAAMG,aAAcC,IAAKJ,EAAMK,UAEtD,eAAIR,UAAU,cAAd,SAA6BG,EAAMK,QACnC,kBAAMR,UAAU,aAAhB,wBAAyCG,EAAMM,eALvCN,EAAMO,QASlB,cAAGV,UAAU,UAAb,2DCbO,SAASW,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOb,EAAP,KAAac,EAAb,KAEMC,GADWC,EAAAA,EAAAA,aAATC,KACaC,MAAM,cAAc,GAUzC,OATAC,EAAAA,EAAAA,YAAU,WAOR,OANAC,EAAAA,GAAsBL,GACnBM,MAAK,SAAAC,GACJ,IAAMC,EAAcD,EAAKtB,KAAKwB,QAAO,SAAApB,GAAK,OAAIA,EAAMqB,WAAa,KACjEX,EAAQS,MAETG,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,4BAA6BF,MACpD,kBAAMb,EAAQ,OACpB,CAACC,KACG,SAAC,EAAD,CAAMf,KAAMA","sources":["components/Cast/Cast.js","pages/CastPage.js"],"sourcesContent":["import { PropTypes } from 'prop-types';\nimport { BASE_SRC } from '../../helpers/constants';\nimport './Cast.css';\nexport default function Cast({ cast }) {\n  return (\n    <div className=\"cast\">\n      {cast.length >= 1 ? (\n        cast.map(actor => (\n          <div key={actor.id} className=\"actor\">\n            <div className=\"image-container\">\n              <img src={BASE_SRC + actor.profile_path} alt={actor.name} />\n            </div>\n            <h3 className=\"actor-title\">{actor.name}</h3>\n            <span className=\"actor-role\">Character: {actor.character}</span>\n          </div>\n        ))\n      ) : (\n        <p className=\"no-info\">There's no info about casts this movie yet.</p>\n      )}\n    </div>\n  );\n}\n\nCast.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string,\n      character: PropTypes.string,\n      profile_path: PropTypes.string,\n    }),\n  ),\n};\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from '../services/moviesApi';\nimport Cast from '../components/Cast';\nexport default function CastPage() {\n  const [cast, setCast] = useState([]);\n  const { slug } = useParams();\n  const movieId = slug.match(/[a-z0-9]+$/)[0];\n  useEffect(() => {\n    API.fetchMovieCredits(movieId)\n      .then(data => {\n        const filtredData = data.cast.filter(actor => actor.popularity > 4);\n        setCast(filtredData);\n      })\n      .catch(error => console.log('error on catch CastPage: ', error));\n    return () => setCast([]);\n  }, [movieId]);\n  return <Cast cast={cast} />;\n}\n"],"names":["Cast","cast","className","length","map","actor","src","BASE_SRC","profile_path","alt","name","character","id","CastPage","useState","setCast","movieId","useParams","slug","match","useEffect","API","then","data","filtredData","filter","popularity","catch","error","console","log"],"sourceRoot":""}