{"version":3,"file":"static/js/Movies-page.98690fe0.chunk.js","mappings":"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","sources":["components/Button/Button.js","helpers/toastyOptions.js","components/SearchForm/SearchForm.js","pages/MoviesPage.js","services/moviesApi.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport './Button.css';\nexport default function Button({ content, name, type, onClick, disabled }) {\n  return (\n    <button\n      type={type}\n      name={name}\n      onClick={onClick}\n      disabled={disabled}\n      className=\"Button\"\n    >\n      {content}\n    </button>\n  );\n}\nButton.defaultProps = {\n  type: 'button',\n  onClick: () => null,\n};\nButton.propTypes = {\n  content: PropTypes.string,\n  name: PropTypes.string,\n  type: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n};\n","export const warningOptions = {\n  position: 'top-right',\n  autoClose: 3000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: 'dark',\n};\n\nexport const errorOptions = {\n  position: 'top-right',\n  autoClose: 3000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: 'dark',\n};\n\nexport const infoOptions = {\n  position: 'top-right',\n  autoClose: 3000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: 'dark',\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Button from '../Button';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { warningOptions } from '../../helpers/toastyOptions';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './SearchForm.css';\nexport default function SearchForm({ onSubmit }) {\n  const [query, setQuery] = useState('');\n  const handleFormInput = event => setQuery(event.target.value);\n  const onFormSubmit = event => {\n    event.preventDefault();\n    if (!query) {\n      toast.warning('Input some text!', warningOptions);\n      return;\n    }\n    onSubmit(query);\n    setQuery('');\n  };\n  return (\n    <>\n      <form onSubmit={onFormSubmit} className=\"search-form\">\n        <input\n          name=\"form-input\"\n          value={query}\n          onChange={handleFormInput}\n          type=\"text\"\n          className=\"form-input\"\n          placeholder=\"What are we looking for?\"\n          autoComplete=\"on\"\n          autoFocus\n        />\n        <Button\n          type=\"submit\"\n          name=\"searchButton\"\n          content=\"Search\"\n          disabled={false}\n          className=\"Button\"\n        />\n      </form>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={3000}\n        hideProgressBar={false}\n        newestOnTop\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        pauseOnHover\n        draggable\n        draggablePercent={60}\n      />\n    </>\n  );\n}\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect, useRef, lazy, Suspense } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport SearchForm from '../components/SearchForm';\nimport * as API from '../services/moviesApi';\nimport { PREV, NEXT, MOVIES } from '../helpers/constants';\nimport Preloader from '../components/Preloader';\nimport { errorOptions, infoOptions } from '../helpers/toastyOptions';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nconst MoviesList = lazy(() =>\n  import('../components/MoviesList' /* webpackChunkName: \"Movies-list\"*/),\n);\nconst HandlePageSwitch = lazy(() =>\n  import(\n    '../components/HandlePageSwitch' /* webpackChunkName: \"Handle-page-switch\"*/\n  ),\n);\nexport default function MoviesPage() {\n  const history = useHistory();\n  const location = useLocation();\n  const searchURL = new URLSearchParams(location.search).get('query') ?? '';\n  const currentPage = new URLSearchParams(location.search).get('page') ?? 1;\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(currentPage);\n  const [query, setQuery] = useState('');\n  const [totalPages, setTotalPages] = useState(0);\n  const isFirstRender = useRef(true);\n  useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    API.fetchMoviesBySearch(page, query)\n      .then(data => {\n        const { results, total_pages } = data;\n        if (!results) {\n          toast.error('No such results!', errorOptions);\n          return;\n        }\n        if (results.length > 1) toast.info('Enjoy!', infoOptions);\n        setMovies(results);\n        setTotalPages(total_pages);\n      })\n      .catch(error => {\n        toast.error(`No images by \"${query}\"!`, errorOptions);\n        console.log('error on catch: ', error);\n      });\n  }, [page, query]);\n  useEffect(() => {\n    if (searchURL === '') return;\n    setQuery(searchURL);\n  }, [searchURL]);\n  const pushToHistory = (query, value) => {\n    history.push({\n      ...location,\n      search: `query=${query}&page=${value}`,\n    });\n  };\n  const handleButtonClick = event => {\n    const { name } = event.currentTarget;\n    if (name === PREV && page > 1) {\n      setPage(state => Number(state) - 1);\n      pushToHistory(query, Number(page) - 1);\n    }\n    if (name === NEXT && page !== totalPages) {\n      setPage(state => Number(state) + 1);\n      pushToHistory(query, Number(page) + 1);\n    }\n  };\n  const handleFormSubmit = input => {\n    if (query === input) return;\n    setQuery(input);\n    pushToHistory(input, page);\n  };\n  return (\n    <div>\n      <SearchForm onSubmit={handleFormSubmit} />\n      <Suspense fallback={<Preloader />}>\n        <MoviesList movies={movies} url={`${MOVIES}/`} />\n        {movies.length > 1 && (\n          <HandlePageSwitch\n            onClick={handleButtonClick}\n            page={page}\n            totalPages={totalPages}\n          />\n        )}\n      </Suspense>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={3000}\n        hideProgressBar={false}\n        newestOnTop\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        pauseOnHover\n        draggable\n        draggablePercent={60}\n      />\n    </div>\n  );\n}\n","import axios from 'axios';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f6f92051b45422d9426f457ad6610127';\nconst API_YOUTUBE_KEY = 'f6f92051b45422d9426f457ad6610127';\nasync function fetchWithErrorhandling(url = '', config = {}) {\n  if (config.hasQuery) {\n    const response = await axios.get(url, config);\n    return response.status === 200 && response.data.results.length !== 0\n      ? response.data\n      : Promise.reject(new Error(console.log('Not found by query')));\n  }\n  const response = await axios.get(url, config);\n  return response.status === 200\n    ? response.data\n    : Promise.reject(new Error(console.log('Not found')));\n}\nexport function fetchTrendingMovies() {\n  return fetchWithErrorhandling(\n    `${BASE_URL}trending/all/week?api_key=${API_KEY}`,\n  );\n}\nexport function fetchTrendingMoviesByPage(page) {\n  return fetchWithErrorhandling(\n    `${BASE_URL}trending/all/week?api_key=${API_KEY}&page=${page}`,\n  );\n}\nexport function fetchMoviesBySearch(page, query) {\n  return fetchWithErrorhandling(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=${page}&include_adult=false`,\n    { hasQuery: true },\n  );\n}\nexport function fetchMovieDetails(id) {\n  return fetchWithErrorhandling(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n}\nexport function fetchMovieCredits(id) {\n  return fetchWithErrorhandling(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`,\n  );\n}\nexport function fetchMovieReviews(id) {\n  return fetchWithErrorhandling(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`,\n  );\n}\nexport function fetchTrailer({ id }) {\n  return fetchWithErrorhandling(\n    `${BASE_URL}movie/${id}/videos?api_key=${API_YOUTUBE_KEY}&language=en-US`,\n  );\n}\n"],"names":["Button","content","name","type","onClick","disabled","className","defaultProps","warningOptions","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","errorOptions","infoOptions","SearchForm","onSubmit","useState","query","setQuery","event","preventDefault","toast","value","onChange","target","placeholder","autoComplete","autoFocus","newestOnTop","rtl","pauseOnFocusLoss","draggablePercent","MoviesList","lazy","HandlePageSwitch","MoviesPage","history","useHistory","location","useLocation","searchURL","URLSearchParams","search","get","currentPage","movies","setMovies","page","setPage","totalPages","setTotalPages","isFirstRender","useRef","useEffect","current","API","then","data","results","total_pages","length","catch","error","console","log","pushToHistory","push","input","Suspense","fallback","Preloader","url","MOVIES","currentTarget","PREV","state","Number","NEXT","BASE_URL","API_KEY","fetchWithErrorhandling","config","hasQuery","axios","response","status","Promise","reject","Error","fetchTrendingMoviesByPage","fetchMoviesBySearch","fetchMovieDetails","id","fetchMovieCredits","fetchMovieReviews","fetchTrailer"],"sourceRoot":""}